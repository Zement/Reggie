name: Build Reggie! Next

on:
  push:
    branches: [ master, develop ]
    tags:
      - 'v*'
  pull_request:
    branches: [ master, develop ]
  workflow_dispatch:

jobs:
  build-windows:
    runs-on: windows-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.13'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install PyQt6 nsmblib pyinstaller
        
    - name: Build executable
      run: |
        python -OO build_reggie.py
        
    - name: Get version
      id: get_version
      shell: pwsh
      run: |
        $version = (Select-String -Path "globals_.py" -Pattern "ReggieVersionShort = '(.+)'").Matches.Groups[1].Value
        echo "VERSION=$version" >> $env:GITHUB_OUTPUT
        
    - name: Upload build artifact
      uses: actions/upload-artifact@v4
      with:
        name: reggie-next-${{ steps.get_version.outputs.VERSION }}-windows
        path: distrib/reggie_next_v*/**
        retention-days: 30
        
    - name: Create Release (on tag)
      if: startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v1
      with:
        files: distrib/reggie_next_v*/**
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-macos:
    runs-on: macos-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.13'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install PyQt6 nsmblib pyinstaller
        
    - name: Build executable
      run: |
        python -OO build_reggie.py
        
    - name: Get version
      id: get_version
      run: |
        VERSION=$(grep "ReggieVersionShort = " globals_.py | sed "s/ReggieVersionShort = '\(.*\)'/\1/")
        echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
        
    - name: Upload build artifact
      uses: actions/upload-artifact@v4
      with:
        name: reggie-next-${{ steps.get_version.outputs.VERSION }}-macos
        path: distrib/reggie_next_v*/**
        retention-days: 30

  build-linux:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.13'
        
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libxcb-xinerama0 libxcb-cursor0
        
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install PyQt6 nsmblib pyinstaller
        
    - name: Build executable
      run: |
        python -OO build_reggie.py
        
    - name: Get version
      id: get_version
      run: |
        VERSION=$(grep "ReggieVersionShort = " globals_.py | sed "s/ReggieVersionShort = '\(.*\)'/\1/")
        echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
        
    - name: Upload build artifact
      uses: actions/upload-artifact@v4
      with:
        name: reggie-next-${{ steps.get_version.outputs.VERSION }}-linux
        path: distrib/reggie_next_v*/**
        retention-days: 30
